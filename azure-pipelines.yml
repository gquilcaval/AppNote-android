trigger:
- main  # Cambia a la rama que prefieras

pool:
  vmImage: 'ubuntu-latest'  # Usa Ubuntu, si prefieres Windows, cambia a 'windows-latest'

jobs:
- job: BuildAPK
  displayName: 'Build APK'
  steps:
  
  # Instalar Java (en este caso, Java 11)
  - task: UseJavaToolInstaller@1
    inputs:
      versionSpec: '11'  # Cambia a la versión de Java que necesitas para tu proyecto Android

  # Configurar el SDK de Android (si no está instalado en el agente de forma predeterminada)
  - task: UseAndroidSdk@2
    inputs:
      sdkVersion: '30.0.3'  # Cambia a la versión del SDK de Android que necesites

  # Descargar dependencias de Gradle (si es necesario)
  - task: GradleInstaller@1
    inputs:
      gradleVersion: '7.5'  # Cambia a la versión de Gradle que necesitas para tu proyecto

  # Ejecutar el build con Gradle (comando assembleRelease para generar el APK)
  - task: GradleBuild@2
    inputs:
      gradleWrapperFile: './gradlew'  # Asegúrate de que el wrapper de Gradle esté presente
      gradleOptions: '-Xms2048m -Xmx3072m'  # Opcional, ajusta la memoria si es necesario
      options: 'assembleRelease'  # Usa 'assembleDebug' si deseas un APK de depuración
      workingDirectory: $(Build.SourcesDirectory)  # Directorio donde está tu proyecto
      publishJUnitResults: false  # Si no tienes pruebas unitarias, puedes mantenerlo en false

  # Publicar el APK generado como artefacto para poder descargarlo
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)/app/build/outputs/apk/release'  # Ruta donde Gradle guarda el APK
      ArtifactName: 'apk'  # Nombre del artefacto
      publishLocation: 'Container'  # Guardar en el contenedor de artefactos de Azure DevOps
